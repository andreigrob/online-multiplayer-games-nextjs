generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                      String    @id @default(cuid())
  name                    String?
  email                   String?   @unique
  emailVerified           DateTime?
  image                   String?
  accounts                Account[]
  Game_Game_player1ToUser Game[]    @relation("Game_player1ToUser")
  Game_Game_player2ToUser Game[]    @relation("Game_player2ToUser")
  sessions                Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Game {
  id                      Int      @id @default(autoincrement())
  player1                 String   @db.VarChar(255)
  player2                 String   @db.VarChar(255)
  gameType                Int
  GameList                GameList @relation(fields: [gameType], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User_Game_player1ToUser User     @relation("Game_player1ToUser", fields: [player1], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User_Game_player2ToUser User     @relation("Game_player2ToUser", fields: [player2], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model GameList {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  Game Game[]
}
